- name: Check if rclone is installed
  command: which rclone
  register: rclone_installed
  ignore_errors: yes

- name: Download rclone
  get_url:
    url: "https://downloads.rclone.org/rclone-current-linux-{{ lookup('pipe', 'dpkg --print-architecture') }}.zip"
    dest: /tmp/rc.zip
  when: rclone_installed.rc != 0

- name: Extract rclone
  shell: >
    unzip -j /tmp/rc.zip '*/rclone' -d /usr/bin/
    unzip -j rc.zip '*/rclone.1' -d /usr/local/share/man/man1/
  args:
    creates: '/usr/bin/rclone'

- name: Create Kavita directory
  file:
    path: "{{ user.home }}/Kavita"
    state: directory
    mode: 0755
    owner: "{{ user.name }}"
    group: "{{ user.name }}"

- name: Create rclone configuration directory
  file:
    path: "{{ user.home }}/.config/rclone"
    state: directory
    mode: 0700
    owner: "{{ user.name }}"
    group: "{{ user.name }}"

- name: configure rclone
  template:
    src: rclone.j2
    dest: "{{ user.home }}/.config/rclone/rclone.conf"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0600

- name: Configure rclone service
  copy:
    content: |
      [Unit]
      Description=rclone

      [Service]
      user={{ user.name }}
      Environment=HOME={{ user.home }}
      ExecStart=/usr/bin/rclone mount Kavita-gd: {{ user.home }}/Kavita --allow-other --allow-non-empty --vfs-cache-mode full
      Restart=on-abort

      [Install]
      WantedBy=multi-user.target
    dest: /etc/systemd/system/rclone.service
    group: "{{ user.name }}"
    owner: "{{ user.name }}"
    mode: 0644

- name: Enable and start the service
  systemd:
    name: rclone.service
    daemon-reload: yes
    enabled: yes
    state: started


